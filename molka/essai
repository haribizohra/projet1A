typedef struct {
	SDL_Surface* image;
	SDL_Rect frame;	
}sprite;

typedef struct {
	int numPerso;
	sprite marcher[2];
	sprite sauter[2];
	sprite courir[2];
	SDL_Rect pos;
	int mvt; //0repos 1marche 2courir 3sauter
	int vie;
	int score;
	float lastAnimated;
}perso;



#include "perso.h"

void initialiserPerso(perso *p,int player)
{
	p->marcher[0].image=IMG_Load("marche.png");
	p->courir[0].image=IMG_Load("courir.png");
	p->sauter[0].image=IMG_Load("saut.png");
	
	p->marcher[0].frame.y = 0;
	p->marcher[0].frame.x = 0;
	p->marcher[0].frame.w = 80;
	p->marcher[0].frame.h = 128;

	p->marcher[0].frame.y = 0;
	p->marcher[0].frame.x = 0;
	p->marcher[0].frame.w = 80;
	p->marcher[0].frame.h = 128;
	
	p->marcher[0].frame.y = 0;
	p->marcher[0].frame.x = 0;
	p->marcher[0].frame.w = 128;
	p->marcher[0].frame.h = 128;

	p->pos.x=100;
	p->pos.y=350;
	p->numPerso = player-1;
	
	p->vie = 3;
	p->lastAnimated = 0;
}

void afficherPerso (perso p,SDL_Surface *screen)
{
	switch(p.mvt)
	{		
		case 1: 
			SDL_BlitSurface(p.marcher[0].image,&p.marcher[0].frame,screen,&p.pos);
		break;

		case 2:
			SDL_BlitSurface(p.courir[0].image,&p.courir[0].frame,screen,&p.pos);
		break;

		case 3:
			SDL_BlitSurface(p.sauter[0].image,&p.sauter[0].frame,screen,&p.pos);
		break;
	}		
	    
}

void animPerso(perso *p)
{
				
	switch (p->mvt)
	{		
		/*case 0:
			p->marcher[p->numPerso].frame.y=0;
			p->marcher[p->numPerso].frame.x=400;
		break;*/
	
		case 1:
			if(SDL_GetTicks() - p->lastAnimated>=100)
			{
				p->marcher[p->numPerso].frame.x +=80;
				if (p->marcher[p->numPerso].frame.x >= 480 )
					p->marcher[p->numPerso].frame.x = 0;
				p->lastAnimated=SDL_GetTicks();
			}
		break;

		case 2:
			if(SDL_GetTicks() - p->lastAnimated>=100)
			{
				p->courir[p->numPerso].frame.x +=80;
				if (p->courir[p->numPerso].frame.x >= 480 )
					p->courir[p->numPerso].frame.x = 0;
				p->lastAnimated=SDL_GetTicks();
			}
		break;

		case 3:
			if(SDL_GetTicks() - p->lastAnimated>=100)
			{
				p->sauter[p->numPerso].frame.x +=128;
				if (p->sauter[p->numPerso].frame.x >= 768 )
					p->sauter[p->numPerso].frame.x = 0;
				p->lastAnimated=SDL_GetTicks();
			}
		break;
	}	
}	


void deplacementPerso(SDL_Event event,perso *p)
{
	int x,y;	
	
	switch(event.type)
	{
	case SDL_KEYUP:
		switch(event.key.keysym.sym)
		{
		case SDLK_RIGHT:
			p->mvt=1; //marcher
		break;

		case SDLK_UP:
			p->mvt=3; //marcher
		break;
		
		case SDLK_SPACE:
			p->mvt=2; //marcher
		break;
		}
	break;
	
	/*case SDL_KEYUP:
		if(event.key.keysym.sym == SDLK_SPACE)
			p->mvt=0;
		if(event.key.keysym.sym == SDLK_RIGHT)
			p->mvt=0; 
	break;*/

	case SDL_MOUSEBUTTONDOWN:
        	if(event.button.button == SDL_BUTTON_LEFT)
            	{
			p->mvt=2;
		}
		if(event.button.button == SDL_BUTTON_RIGHT)
            	{
			p->mvt=3;
		}
  	break;
	
	case SDL_MOUSEBUTTONUP:
        	if(event.button.button == SDL_BUTTON_LEFT)
            		p->mvt=0;
  	break;

	case SDL_MOUSEMOTION:
		if(event.motion.x < p->pos.x + 40)
		    p->mvt=1;
		else p->mvt=0;
   	break;

	}
}
